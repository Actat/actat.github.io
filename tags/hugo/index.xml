<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on おなかすいた</title>
    <link>https://actat.github.io/tags/hugo/</link>
    <description>Recent content in Hugo on おなかすいた</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Apr 2019 21:59:04 +0900</lastBuildDate>
    
	<atom:link href="https://actat.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HugoとGitHub Pagesでブログ的なものをはじめよう</title>
      <link>https://actat.github.io/posts/hugo%E3%81%A8githubpages%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E7%9A%84%E3%81%AA%E3%82%82%E3%81%AE%E3%82%92%E3%81%AF%E3%81%98%E3%82%81%E3%82%88%E3%81%86/</link>
      <pubDate>Sun, 14 Apr 2019 21:59:04 +0900</pubDate>
      
      <guid>https://actat.github.io/posts/hugo%E3%81%A8githubpages%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E7%9A%84%E3%81%AA%E3%82%82%E3%81%AE%E3%82%92%E3%81%AF%E3%81%98%E3%82%81%E3%82%88%E3%81%86/</guid>
      <description>abstract 趣味の作業記録を書く場所の確保は記録する習慣がある人にとって大切だ． 作業内容を気軽に記録し，必要な時に検索して見返せる環境を整えることで安心して作業できるようになる．
手っ取り早くTwitterに記録した例がある． 進捗があるごとにスレッドに追加したが，毎回スレッドを掘り起こして追加するのが面倒，面倒なのであまり更新しない，検索性が悪い，一度に書ける情報量が少ないといった問題点があった．
ブログに記録すると良いという話を聞き，始めることにした． ここには開設する作業の記録を記す．
どうしてHugoとGitHub Pagesなのか ブログの始め方には大きく分けて2種類ある．
 ブログを書く専用のサービスを利用する（はてなブログなど） 自分でホームページを作る（今回はこっち）  これに関しては「趣味の問題」で後者にした． 一回くらいこういうのやってみたいと思ったから．
とはいえサーバーの用意までやるつもりはないしどうしたものかと思ったときにGitHub Pagesの存在を思い出したので「ブログ githubpages」で検索． Jekyll + GitHub PagesとかHugo + GithHub Pagesとかいろいろあるらしいことが分かった． 「jekyll hugo」とgoogle先生に聞くとjekyllからhugoへ移行する方法がぽこぽこ出てくるのでHugoにした． ということでHugoとGitHub Pagesにした． ダメだったらやり直せばいいんや．
ということで参考にしたかった人，いたらごめんなさい．
作業内容 Quick Startに従ってテーマの追加まで作業した． インストールはWSLのUbuntuでapt installした． インストーラをダウンロードするとか再起動要求されるとかそういう面倒が発生しないのでWSLに入れれば済むものはそうしてしまいたい主義（あたまをつかわない）． Quick Startの通りにしたのでテーマもAnankeになっている． 気が向いたら変えるかもしれないし，ずっとこのままかもしれない．
Anankeには丁寧に使い方が書かれているので，config.tomlをコピーして設定を書き，hero backgroundを携帯の中に入っていた適当な画像にした．
themes/ananke/exampleSite/contentの中にあるaboutをcontentの中にコピーして_index.mdを編集した．
出来上がりの確認は
$ hugo server -D  してhttp://localhost:1313にアクセスする．
config.tomlのbase urlをGitHub Pagesのものにして保存． ここまでの内容で普通のリポジトリとしてgithubにpushした．
GitHub Pagesのためのリポジトリをgithub上で作成． 普段と違うのは，リポジトリの名前を[ username ].github.ioとすること． 空のリポジトリを作ったら
$ git submodule add git@github.com:[ username ]/[ username ].</description>
    </item>
    
  </channel>
</rss>